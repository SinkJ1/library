{
  'swagger': '2.0',
  'info':
    {
      'description': 'Api Documentation',
      'version': '1.0',
      'title': 'Api Documentation',
      'termsOfService': 'urn:tos',
      'contact': {},
      'license': { 'name': 'Apache 2.0', 'url': 'http://www.apache.org/licenses/LICENSE-2.0' },
    },
  'host': 'practice.sqilsoft.by/internship/yury_sinkevich/library',
  'basePath': '/',
  'tags':
    [
      { 'name': 'account-resource', 'description': 'Account Resource' },
      { 'name': 'author-resource', 'description': 'Author Resource' },
      { 'name': 'authority-resource', 'description': 'Authority Resource' },
      { 'name': 'book-resource', 'description': 'Book Resource' },
      { 'name': 'customer-resource', 'description': 'Customer Resource' },
      { 'name': 'public-user-resource', 'description': 'Public User Resource' },
      { 'name': 'purchase-resource', 'description': 'Purchase Resource' },
      { 'name': 'user-jwt-controller', 'description': 'User JWT Controller' },
      { 'name': 'user-resource', 'description': 'User Resource' },
    ],
  'paths':
    {
      '/api/account':
        {
          'get':
            {
              'tags': ['account-resource'],
              'summary': 'getAccount',
              'operationId': 'getAccountUsingGET_1',
              'produces': ['*/*'],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/AdminUserDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'post':
            {
              'tags': ['account-resource'],
              'summary': 'saveAccount',
              'operationId': 'saveAccountUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'userDTO',
                    'description': 'userDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/AdminUserDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/account/change-password':
        {
          'post':
            {
              'tags': ['account-resource'],
              'summary': 'changePassword',
              'operationId': 'changePasswordUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'passwordChangeDto',
                    'description': 'passwordChangeDto',
                    'required': true,
                    'schema': { '$ref': '#/definitions/PasswordChangeDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/account/reset-password/finish':
        {
          'post':
            {
              'tags': ['account-resource'],
              'summary': 'finishPasswordReset',
              'operationId': 'finishPasswordResetUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'keyAndPassword',
                    'description': 'keyAndPassword',
                    'required': true,
                    'schema': { '$ref': '#/definitions/KeyAndPasswordVM' },
                  },
                ],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/account/reset-password/init':
        {
          'post':
            {
              'tags': ['account-resource'],
              'summary': 'requestPasswordReset',
              'operationId': 'requestPasswordResetUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters': [{ 'in': 'body', 'name': 'mail', 'description': 'mail', 'required': true, 'schema': { 'type': 'string' } }],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/activate':
        {
          'get':
            {
              'tags': ['account-resource'],
              'summary': 'activateAccount',
              'operationId': 'activateAccountUsingGET_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'key', 'in': 'query', 'description': 'key', 'required': true, 'type': 'string' }],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/admin/users':
        {
          'get':
            {
              'tags': ['user-resource'],
              'summary': 'getAllUsers',
              'operationId': 'getAllUsersUsingGET_1',
              'produces': ['*/*'],
              'parameters':
                [
                  { 'name': 'offset', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int64' },
                  { 'name': 'paged', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'pageNumber', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'pageSize', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'sort.sorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'sort.unsorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'unpaged', 'in': 'query', 'required': false, 'type': 'boolean' },
                ],
              'responses':
                { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/AdminUserDTO' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'post':
            {
              'tags': ['user-resource'],
              'summary': 'createUser',
              'operationId': 'createUserUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'userDTO',
                    'description': 'userDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/AdminUserDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/User' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'put':
            {
              'tags': ['user-resource'],
              'summary': 'updateUser',
              'operationId': 'updateUserUsingPUT_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'userDTO',
                    'description': 'userDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/AdminUserDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/AdminUserDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/admin/users/{login}':
        {
          'get':
            {
              'tags': ['user-resource'],
              'summary': 'getUser',
              'operationId': 'getUserUsingGET_1',
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'name': 'login',
                    'in': 'path',
                    'description': 'login',
                    'required': true,
                    'type': 'string',
                    'pattern': "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/AdminUserDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'delete':
            {
              'tags': ['user-resource'],
              'summary': 'deleteUser',
              'operationId': 'deleteUserUsingDELETE_1',
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'name': 'login',
                    'in': 'path',
                    'description': 'login',
                    'required': true,
                    'type': 'string',
                    'pattern': "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
                  },
                ],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/authenticate':
        {
          'get':
            {
              'tags': ['account-resource'],
              'summary': 'isAuthenticated',
              'operationId': 'isAuthenticatedUsingGET_1',
              'produces': ['*/*'],
              'responses': { '200': { 'description': 'OK', 'schema': { 'type': 'string' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'post':
            {
              'tags': ['user-jwt-controller'],
              'summary': 'authorize',
              'operationId': 'authorizeUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'loginVM',
                    'description': 'loginVM',
                    'required': true,
                    'schema': { '$ref': '#/definitions/LoginVM' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/JWTToken' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/authorities':
        {
          'get':
            {
              'tags': ['public-user-resource'],
              'summary': 'getAuthorities',
              'operationId': 'getAuthoritiesUsingGET_1',
              'produces': ['*/*'],
              'responses': { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { 'type': 'string' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/authority':
        {
          'get':
            {
              'tags': ['authority-resource'],
              'summary': 'getAllAuthority',
              'operationId': 'getAllAuthorityUsingGET_1',
              'produces': ['*/*'],
              'responses':
                { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/Authority' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/authority/{login}':
        {
          'get':
            {
              'tags': ['authority-resource'],
              'summary': 'getAllAuthorityByLogin',
              'operationId': 'getAllAuthorityByLoginUsingGET_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'login', 'in': 'path', 'description': 'login', 'required': true, 'type': 'string' }],
              'responses':
                { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/Authority' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/authors':
        {
          'get':
            {
              'tags': ['author-resource'],
              'summary': 'getAllAuthors',
              'operationId': 'getAllAuthorsUsingGET_1',
              'produces': ['*/*'],
              'parameters':
                [
                  { 'name': 'offset', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int64' },
                  { 'name': 'paged', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'pageNumber', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'pageSize', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'sort.sorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'sort.unsorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'unpaged', 'in': 'query', 'required': false, 'type': 'boolean' },
                ],
              'responses':
                { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/AuthorDTO' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'post':
            {
              'tags': ['author-resource'],
              'summary': 'createAuthor',
              'operationId': 'createAuthorUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'authorDTO',
                    'description': 'authorDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/AuthorDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/AuthorDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/authors/{id}':
        {
          'get':
            {
              'tags': ['author-resource'],
              'summary': 'getAuthor',
              'operationId': 'getAuthorUsingGET_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/AuthorDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'put':
            {
              'tags': ['author-resource'],
              'summary': 'updateAuthor',
              'operationId': 'updateAuthorUsingPUT_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'authorDTO',
                    'description': 'authorDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/AuthorDTO' },
                  },
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/AuthorDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'delete':
            {
              'tags': ['author-resource'],
              'summary': 'deleteAuthor',
              'operationId': 'deleteAuthorUsingDELETE_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'patch':
            {
              'tags': ['author-resource'],
              'summary': 'partialUpdateAuthor',
              'operationId': 'partialUpdateAuthorUsingPATCH_1',
              'consumes': ['application/merge-patch+json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'authorDTO',
                    'description': 'authorDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/AuthorDTO' },
                  },
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/AuthorDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/books':
        {
          'get':
            {
              'tags': ['book-resource'],
              'summary': 'getAllBooks',
              'operationId': 'getAllBooksUsingGET_1',
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'name': 'eagerload',
                    'in': 'query',
                    'description': 'eagerload',
                    'required': false,
                    'type': 'boolean',
                    'default': false,
                  },
                  { 'name': 'offset', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int64' },
                  { 'name': 'paged', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'pageNumber', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'pageSize', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'sort.sorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'sort.unsorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'unpaged', 'in': 'query', 'required': false, 'type': 'boolean' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/BookDTO' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'post':
            {
              'tags': ['book-resource'],
              'summary': 'createBook',
              'operationId': 'createBookUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'bookDTO',
                    'description': 'bookDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/BookDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/BookDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/books/permission/authority':
        {
          'post':
            {
              'tags': ['book-resource'],
              'summary': 'addPermissionForAuthority',
              'operationId': 'addPermissionForAuthorityUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'permissionVM',
                    'description': 'permissionVM',
                    'required': true,
                    'schema': { '$ref': '#/definitions/PermissionVM' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { 'type': 'string' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/books/permission/user':
        {
          'post':
            {
              'tags': ['book-resource'],
              'summary': 'addPermissionForUser',
              'operationId': 'addPermissionForUserUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'permissionVM',
                    'description': 'permissionVM',
                    'required': true,
                    'schema': { '$ref': '#/definitions/PermissionVM' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { 'type': 'string' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/books/{id}':
        {
          'get':
            {
              'tags': ['book-resource'],
              'summary': 'getBook',
              'operationId': 'getBookUsingGET_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/BookDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'put':
            {
              'tags': ['book-resource'],
              'summary': 'updateBook',
              'operationId': 'updateBookUsingPUT_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'bookDTO',
                    'description': 'bookDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/BookDTO' },
                  },
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/BookDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'delete':
            {
              'tags': ['book-resource'],
              'summary': 'deleteBook',
              'operationId': 'deleteBookUsingDELETE_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'patch':
            {
              'tags': ['book-resource'],
              'summary': 'partialUpdateBook',
              'operationId': 'partialUpdateBookUsingPATCH_1',
              'consumes': ['application/merge-patch+json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'bookDTO',
                    'description': 'bookDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/BookDTO' },
                  },
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/BookDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/customers':
        {
          'get':
            {
              'tags': ['customer-resource'],
              'summary': 'getAllCustomers',
              'operationId': 'getAllCustomersUsingGET_1',
              'produces': ['*/*'],
              'parameters':
                [
                  { 'name': 'offset', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int64' },
                  { 'name': 'paged', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'pageNumber', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'pageSize', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'sort.sorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'sort.unsorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'unpaged', 'in': 'query', 'required': false, 'type': 'boolean' },
                ],
              'responses':
                { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/CustomerDTO' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'post':
            {
              'tags': ['customer-resource'],
              'summary': 'createCustomer',
              'operationId': 'createCustomerUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'customerDTO',
                    'description': 'customerDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/CustomerDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/CustomerDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/customers/{id}':
        {
          'get':
            {
              'tags': ['customer-resource'],
              'summary': 'getCustomer',
              'operationId': 'getCustomerUsingGET_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/CustomerDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'put':
            {
              'tags': ['customer-resource'],
              'summary': 'updateCustomer',
              'operationId': 'updateCustomerUsingPUT_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'customerDTO',
                    'description': 'customerDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/CustomerDTO' },
                  },
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/CustomerDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'delete':
            {
              'tags': ['customer-resource'],
              'summary': 'deleteCustomer',
              'operationId': 'deleteCustomerUsingDELETE_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'patch':
            {
              'tags': ['customer-resource'],
              'summary': 'partialUpdateCustomer',
              'operationId': 'partialUpdateCustomerUsingPATCH_1',
              'consumes': ['application/merge-patch+json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'customerDTO',
                    'description': 'customerDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/CustomerDTO' },
                  },
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/CustomerDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/purchases':
        {
          'get':
            {
              'tags': ['purchase-resource'],
              'summary': 'getAllPurchases',
              'operationId': 'getAllPurchasesUsingGET_1',
              'produces': ['*/*'],
              'parameters':
                [
                  { 'name': 'offset', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int64' },
                  { 'name': 'paged', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'pageNumber', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'pageSize', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'sort.sorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'sort.unsorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'unpaged', 'in': 'query', 'required': false, 'type': 'boolean' },
                ],
              'responses':
                { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/PurchaseDTO' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'post':
            {
              'tags': ['purchase-resource'],
              'summary': 'createPurchase',
              'operationId': 'createPurchaseUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'purchaseDTO',
                    'description': 'purchaseDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/PurchaseDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/PurchaseDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/purchases/{id}':
        {
          'get':
            {
              'tags': ['purchase-resource'],
              'summary': 'getPurchase',
              'operationId': 'getPurchaseUsingGET_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/PurchaseDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'put':
            {
              'tags': ['purchase-resource'],
              'summary': 'updatePurchase',
              'operationId': 'updatePurchaseUsingPUT_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                  {
                    'in': 'body',
                    'name': 'purchaseDTO',
                    'description': 'purchaseDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/PurchaseDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/PurchaseDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'delete':
            {
              'tags': ['purchase-resource'],
              'summary': 'deletePurchase',
              'operationId': 'deletePurchaseUsingDELETE_1',
              'produces': ['*/*'],
              'parameters': [{ 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' }],
              'responses': { '200': { 'description': 'OK' } },
              'security': [{ 'Authorization': ['global'] }],
            },
          'patch':
            {
              'tags': ['purchase-resource'],
              'summary': 'partialUpdatePurchase',
              'operationId': 'partialUpdatePurchaseUsingPATCH_1',
              'consumes': ['application/merge-patch+json'],
              'produces': ['*/*'],
              'parameters':
                [
                  { 'name': 'id', 'in': 'path', 'description': 'id', 'required': true, 'type': 'integer', 'format': 'int64' },
                  {
                    'in': 'body',
                    'name': 'purchaseDTO',
                    'description': 'purchaseDTO',
                    'required': true,
                    'schema': { '$ref': '#/definitions/PurchaseDTO' },
                  },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { '$ref': '#/definitions/PurchaseDTO' } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/register':
        {
          'post':
            {
              'tags': ['account-resource'],
              'summary': 'registerAccount',
              'operationId': 'registerAccountUsingPOST_1',
              'consumes': ['application/json'],
              'produces': ['*/*'],
              'parameters':
                [
                  {
                    'in': 'body',
                    'name': 'managedUserVM',
                    'description': 'managedUserVM',
                    'required': true,
                    'schema': { '$ref': '#/definitions/ManagedUserVM' },
                  },
                ],
              'responses': { '201': { 'description': 'Created' } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
      '/api/users':
        {
          'get':
            {
              'tags': ['public-user-resource'],
              'summary': 'getAllPublicUsers',
              'operationId': 'getAllPublicUsersUsingGET_1',
              'produces': ['*/*'],
              'parameters':
                [
                  { 'name': 'offset', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int64' },
                  { 'name': 'paged', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'pageNumber', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'pageSize', 'in': 'query', 'required': false, 'type': 'integer', 'format': 'int32' },
                  { 'name': 'sort.sorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'sort.unsorted', 'in': 'query', 'required': false, 'type': 'boolean' },
                  { 'name': 'unpaged', 'in': 'query', 'required': false, 'type': 'boolean' },
                ],
              'responses': { '200': { 'description': 'OK', 'schema': { 'type': 'array', 'items': { '$ref': '#/definitions/UserDTO' } } } },
              'security': [{ 'Authorization': ['global'] }],
            },
        },
    },
  'securityDefinitions': { 'Authorization': { 'type': 'apiKey', 'name': 'Authorization', 'in': 'header' } },
  'definitions':
    {
      'AdminUserDTO':
        {
          'type': 'object',
          'required': ['login'],
          'properties':
            {
              'activated': { 'type': 'boolean' },
              'authorities': { 'type': 'array', 'uniqueItems': true, 'items': { 'type': 'string' } },
              'createdBy': { 'type': 'string' },
              'createdDate': { 'type': 'string', 'format': 'date-time' },
              'email': { 'type': 'string', 'minLength': 5, 'maxLength': 254 },
              'firstName': { 'type': 'string', 'minLength': 0, 'maxLength': 50 },
              'id': { 'type': 'integer', 'format': 'int64' },
              'imageUrl': { 'type': 'string', 'minLength': 0, 'maxLength': 256 },
              'langKey': { 'type': 'string', 'minLength': 2, 'maxLength': 10 },
              'lastModifiedBy': { 'type': 'string' },
              'lastModifiedDate': { 'type': 'string', 'format': 'date-time' },
              'lastName': { 'type': 'string', 'minLength': 0, 'maxLength': 50 },
              'login':
                {
                  'type': 'string',
                  'minLength': 1,
                  'maxLength': 50,
                  'pattern': "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
                },
            },
          'title': 'AdminUserDTO',
        },
      'AuthorDTO':
        {
          'type': 'object',
          'required': ['birthday', 'name'],
          'properties':
            {
              'birthday': { 'type': 'string', 'format': 'date' },
              'id': { 'type': 'integer', 'format': 'int64' },
              'name': { 'type': 'string' },
            },
          'title': 'AuthorDTO',
        },
      'Authority':
        {
          'type': 'object',
          'required': ['name'],
          'properties': { 'name': { 'type': 'string', 'minLength': 0, 'maxLength': 50 } },
          'title': 'Authority',
        },
      'BookDTO':
        {
          'type': 'object',
          'required': ['dateOfIssue', 'name'],
          'properties':
            {
              'authors': { 'type': 'array', 'uniqueItems': true, 'items': { '$ref': '#/definitions/AuthorDTO' } },
              'dateOfIssue': { 'type': 'string', 'format': 'date' },
              'id': { 'type': 'integer', 'format': 'int64' },
              'name': { 'type': 'string' },
            },
          'title': 'BookDTO',
        },
      'CustomerDTO':
        {
          'type': 'object',
          'required': ['birthday', 'name'],
          'properties':
            {
              'birthday': { 'type': 'string', 'format': 'date' },
              'id': { 'type': 'integer', 'format': 'int64' },
              'name': { 'type': 'string' },
            },
          'title': 'CustomerDTO',
        },
      'JWTToken': { 'type': 'object', 'properties': { 'id_token': { 'type': 'string' } }, 'title': 'JWTToken' },
      'KeyAndPasswordVM':
        {
          'type': 'object',
          'properties': { 'key': { 'type': 'string' }, 'newPassword': { 'type': 'string' } },
          'title': 'KeyAndPasswordVM',
        },
      'LoginVM':
        {
          'type': 'object',
          'required': ['password', 'username'],
          'properties':
            {
              'password': { 'type': 'string', 'minLength': 1, 'maxLength': 100 },
              'rememberMe': { 'type': 'boolean' },
              'username': { 'type': 'string', 'minLength': 1, 'maxLength': 50 },
            },
          'title': 'LoginVM',
        },
      'ManagedUserVM':
        {
          'type': 'object',
          'required': ['login'],
          'properties':
            {
              'activated': { 'type': 'boolean' },
              'authorities': { 'type': 'array', 'uniqueItems': true, 'items': { 'type': 'string' } },
              'createdBy': { 'type': 'string' },
              'createdDate': { 'type': 'string', 'format': 'date-time' },
              'email': { 'type': 'string', 'minLength': 5, 'maxLength': 254 },
              'firstName': { 'type': 'string', 'minLength': 0, 'maxLength': 50 },
              'id': { 'type': 'integer', 'format': 'int64' },
              'imageUrl': { 'type': 'string', 'minLength': 0, 'maxLength': 256 },
              'langKey': { 'type': 'string', 'minLength': 2, 'maxLength': 10 },
              'lastModifiedBy': { 'type': 'string' },
              'lastModifiedDate': { 'type': 'string', 'format': 'date-time' },
              'lastName': { 'type': 'string', 'minLength': 0, 'maxLength': 50 },
              'login':
                {
                  'type': 'string',
                  'minLength': 1,
                  'maxLength': 50,
                  'pattern': "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
                },
              'password': { 'type': 'string', 'minLength': 4, 'maxLength': 100 },
            },
          'title': 'ManagedUserVM',
        },
      'PasswordChangeDTO':
        {
          'type': 'object',
          'properties': { 'currentPassword': { 'type': 'string' }, 'newPassword': { 'type': 'string' } },
          'title': 'PasswordChangeDTO',
        },
      'PermissionVM':
        {
          'type': 'object',
          'properties':
            {
              'entityId': { 'type': 'integer', 'format': 'int64' },
              'permission': { 'type': 'string' },
              'userCredentional': { 'type': 'string' },
            },
          'title': 'PermissionVM',
        },
      'PurchaseDTO':
        {
          'type': 'object',
          'properties':
            {
              'book': { '$ref': '#/definitions/BookDTO' },
              'cost': { 'type': 'integer', 'format': 'int64' },
              'customer': { '$ref': '#/definitions/CustomerDTO' },
              'id': { 'type': 'integer', 'format': 'int64' },
            },
          'title': 'PurchaseDTO',
        },
      'User':
        {
          'type': 'object',
          'required': ['activated', 'login'],
          'properties':
            {
              'activated': { 'type': 'boolean' },
              'email': { 'type': 'string', 'minLength': 5, 'maxLength': 254 },
              'firstName': { 'type': 'string', 'minLength': 0, 'maxLength': 50 },
              'id': { 'type': 'integer', 'format': 'int64' },
              'imageUrl': { 'type': 'string', 'minLength': 0, 'maxLength': 256 },
              'langKey': { 'type': 'string', 'minLength': 2, 'maxLength': 10 },
              'lastName': { 'type': 'string', 'minLength': 0, 'maxLength': 50 },
              'login':
                {
                  'type': 'string',
                  'minLength': 1,
                  'maxLength': 50,
                  'pattern': "^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
                },
              'resetDate': { 'type': 'string', 'format': 'date-time' },
            },
          'title': 'User',
        },
      'UserDTO':
        {
          'type': 'object',
          'properties': { 'id': { 'type': 'integer', 'format': 'int64' }, 'login': { 'type': 'string' } },
          'title': 'UserDTO',
        },
    },
}
